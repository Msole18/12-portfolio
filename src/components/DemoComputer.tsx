/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: AntonYurevich (https://sketchfab.com/antonyurevich)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/apple-i-mac-9a6f06a783f54d9ca5087d51a63a5c42
Title: Apple I Mac
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh
    Object_6: THREE.Mesh
    Object_8: THREE.Mesh
  }
  materials: {
    Apple_LP: THREE.MeshStandardMaterial
  }
}

export const DemoComputer = (props: JSX.IntrinsicElements['group']) => {
  const { nodes, materials } = useGLTF('/models/apple_i_mac.glb') as GLTFResult
  const group = useRef<THREE.Group>(null)
  
    useFrame((state) => {
      if (!group.current) return;
      const t = state.clock.getElapsedTime()
      group.current.rotation.x = THREE.MathUtils.lerp(group.current.rotation.x, Math.cos(t / 2) / 20 + 0.25, 0.1)
      group.current.rotation.y = THREE.MathUtils.lerp(group.current.rotation.y, Math.sin(t / 4) / 20, 0.1)
      // group.current.rotation.z = THREE.MathUtils.lerp(group.current.rotation.z, Math.sin(t / 8) / 20, 0.1)
      // group.current.position.y = THREE.MathUtils.lerp(group.current.position.y, (-1 + Math.sin(t / 2)) / 2, 0.1)
    })
  
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_4.geometry}
        material={materials.Apple_LP}
        position={[-78.066, 73.483, 11.978]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_6.geometry}
        material={materials.Apple_LP}
        position={[-79.713, 73.627, 12.476]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_8.geometry}
        material={materials.Apple_LP}
        position={[-76.52, 73.58, 12.174]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
    </group>
  )
}

useGLTF.preload('/models/apple_i_mac.glb')
